# -*- coding: utf-8 -*-
"""marketing_data Analysis .py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wNPJn6rwsf5MetMolU1zgVlT2RX4kZK1
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')
import plotly.express as px
import plotly.figure_factory as ff

df=pd.read_csv("/content/marketing_data.csv")
df.head()

df.info()

# Feature: Days as Customer
df['Dt_Customer'] = pd.to_datetime(df['Dt_Customer'])



df.describe().T

df.isnull().sum()

df.describe(include='object')

df['Age'] =2012  - df['Year_Birth']



# Handle missing values
#df[' Income '].fillna(df[' Income '].median(), inplace=True)
df.dropna(inplace=True)
df.set_index('ID', inplace=True, drop=True)

age_more_100 = df[df['Age'] >80]
age_more_100
age_more_100=age_more_100.index
df.drop(age_more_100, inplace=True)

df.info()

# Calculate Total Spending
df['Total_Spending'] = df['MntWines'] + df['MntFruits'] + df['MntMeatProducts'] + df['MntFishProducts'] + df['MntSweetProducts'] + df['MntGoldProds']

# Calculate Total Purchases
df['Total_Purchases'] = df['NumWebPurchases'] + df['NumCatalogPurchases'] + df['NumStorePurchases']

df.isnull().sum()

"""# **1. Customer Segmentation**

*1-1What are the key customer segments based on spending habits (e.g., high spenders, moderate spenders, low spenders)?*
"""

df['Spending_Segment'] = pd.qcut(df['Total_Spending'], q=[0, 0.33, 0.66, 1], labels=['Low Spender', 'Moderate Spender', 'High Spender'])
segment_counts = df['Spending_Segment'].value_counts()
segment_summary = df.groupby('Spending_Segment')['Total_Spending'].describe()

segment_counts

segment_summary

"""*2-1How do customer demographics (age, income, education, marital status) vary across spending segments*"""

df['Spending_Segment'] = pd.qcut(df['Total_Spending'], q=[0, 0.33, 0.66, 1], labels=['Low Spender', 'Moderate Spender', 'High Spender'])

demographic_analysis = df.groupby('Spending_Segment')[['Age', ' Income ', 'Education', 'Marital_Status']].value_counts()
demographic_analysis

"""* 3-1Which products (wine, fruits, meat, etc.) are most popular among different customer segments?*"""

product_analysis = df.groupby('Spending_Segment')[[ 'MntWines', 'MntFruits',
       'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',
       'MntGoldProds', 'NumDealsPurchases', 'NumWebPurchases',
       'NumCatalogPurchases', 'NumStorePurchases']].sum()
product_analysis

"""

*4-1 Are there differences in purchase channels (web, catalog, store) across customer segments?*



"""

channel_analysis = df.groupby('Spending_Segment')[['NumWebPurchases', 'NumCatalogPurchases', 'NumStorePurchases']].sum()
channel_analysis

"""*5-1How does the presence of children or teenagers in the household affect spending behavior*


"""

df['HasChildren'] = (df['Kidhome'] > 0) | (df['Teenhome'] > 0)
spending_by_children = df.groupby('HasChildren')['Total_Spending'].count()
print(spending_by_children)
df['HasChildren'].describe()

spending_by_children = df.groupby('HasChildren')[['Total_Spending','MntWines', 'MntFruits',
       'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',
       'MntGoldProds']].median().reset_index()
spending_by_children

"""# **2. Campaign Analysis**

* 1-2/Which marketing campaign (Cmp1, Cmp2, Cmp3, Cmp4, Cmp5) was the most successful in terms of customer acceptance?t*
"""

campaign_acceptance = df[['AcceptedCmp1', 'AcceptedCmp2', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5']].sum()
total_customers = len(df)
campaign_acceptance_rate = (campaign_acceptance / total_customers) * 100
campaign_results = pd.DataFrame({
    'Campaign': ['Cmp1', 'Cmp2', 'Cmp3', 'Cmp4', 'Cmp5'],
    'Total_Acceptances': campaign_acceptance,
    'Acceptance_Rate': campaign_acceptance_rate})
campaign_results

"""*2-2/ Do customers who accepted campaigns have higher spending or purchase frequency compared to those who did not?*"""

df['Accepted_Any_Campaign'] = df[['AcceptedCmp1', 'AcceptedCmp2', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5']].max(axis=1)
spending_by_acceptance = df.groupby('Accepted_Any_Campaign')[['Total_Spending', 'Total_Purchases']].mean().reset_index()
spending_by_acceptance

df['Recency']
#'Recency/Number of days since customer's last purchase

"""*2-3/How does the recency of purchases (Recency) influence campaign acceptance?*"""

recency_acceptance = df.groupby('Accepted_Any_Campaign')['Recency'].mean()
recency_acceptance



"""*2-4/ Are there differences in campaign acceptance rates across countries?*"""

country_acceptance_rate = df.groupby('Country')['Accepted_Any_Campaign'].mean()*100
country_acceptance_rate

"""# 3-Churn Analysis

*3-1/What is the relationship between Recency (days since last purchase) and churn*
"""

df['Churn'] = df['Recency'].apply(lambda x: 1 if x > 90 else 0)
churn_analysis = df.groupby('Churn')[['Recency','Total_Spending', 'Total_Purchases']].sum().reset_index()
churn_analysis

"""*3-2/Do customers who complain (Complain = 1) have a higher likelihood of churning*"""

#We can compare the churn rates between customers who complained and those who did not.
complain_churn = df.groupby('Complain')['Churn'].mean().reset_index()
complain_churn

"""*3-3/How does spending behavior (Total_Spending) correlate with churn*"""

#We can analyze if low-spending customers are more likely to churn
spending_churn = df.groupby('Churn')['Total_Spending'].mean().reset_index()
spending_churn.columns = ['Churn', 'Mean_Total_Spending']
spending_churn

df['Age'].describe()

"""3-4/Are there differences in churn rates across demographic groups (age, income, marital status)?"""

#We can compare churn rates across age groups, income brackets, and marital status.
df['Age_Group'] = pd.cut(df['Age'], bins=[0, 30, 40, 50, 60, 100], labels=['20-30', '30-40', '40-50', '50-60', '60+'])
age_churn = df.groupby('Age_Group')['Churn'].mean().reset_index()
age_churn.columns = ['Age_Group', 'Churn_Rate']
df['Income_Group'] = pd.qcut(df[' Income '], q=[0, 0.33, 0.66, 1], labels=['Low', 'Medium', 'High'])
income_churn = df.groupby('Income_Group')['Churn'].mean().reset_index()
income_churn.columns = ['Income_Group', 'Churn_Rate']
income_churn
marital_churn = df.groupby('Marital_Status')['Churn'].count().reset_index()
marital_churn.columns = ['Marital_Status', 'Churn_Rate']
print(marital_churn)
print('*--------------------------*')
print(age_churn)
print('*---------------------------*')
print(income_churn)

"""3-5/Do customers who accepted campaigns have a lower churn rate"""

campaign_churn = df.groupby('Accepted_Any_Campaign')['Churn'].mean().reset_index()
campaign_churn.columns = ['Accepted_Any_Campaign', 'Churn_Rate']
campaign_churn

